{"dependencies":[{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villians = new Set();\n    villians.add('Joker');\n    villians.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element, \nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n    \n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n    \n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe \n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/object.dart","line":"21"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]}],"kind":"class","name":"List","id":"List","comment":"\nAn indexable collection of objects with a length.\n\nSubclasses of this class implement different kinds of lists.\nThe most common kinds of lists are:\n\n* Fixed-length list.\n  An error occurs when attempting to use operations\n  that can change the length of the list.\n\n* Growable list. Full implementation of the API defined in this class.\n\nThe following code illustrates that some List implementations support\nonly a subset of the API.\n\n    var fixedLengthList = new List(5);\n    fixedLengthList.length = 0;  // Error.\n    fixedLengthList.add(499);    // Error.\n    fixedLengthList[0] = 87;\n\n    var growableList = [1, 2];\n    growableList.length = 0;\n    growableList.add(499);\n    growableList[0] = 87;\n\nLists are [Iterable].\nIteration occurs over values in index order.\nChanging the values does not affect iteration,\nbut changing the valid indices&mdash;that is,\nchanging the list's length&mdash;between\niteration steps\ncauses a [ConcurrentModificationError].\nThis means that only growable lists can throw ConcurrentModificationError.\nIf the length changes temporarily\nand is restored before continuing the iteration,\nthe iterator does not detect it.\n","children":[{"returnType":{"name":"E","refId":"dart.core/List/E"},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","comment":"\nReturns the object at the given [index] in the list\nor throws a [RangeError] if [index] is out of bounds.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"111"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","comment":"\nSets the value at the given [index] in the list to [value]\nor throws a [RangeError] if [index] is out of bounds.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"value","id":"value"}],"line":"117"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"length=","id":"length=1()","comment":"\nChanges the length of this list.\n\nIf [newLength] is greater than\nthe current [length], entries are initialized to [:null:].\n\nThrows an [UnsupportedError] if the list is fixed-length.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"newLength","id":"newLength"}],"line":"134"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","comment":"\nAdds [value] to the end of this list,\nextending the length by one.\n\nThrows an [UnsupportedError] if the list is fixed-length.\n","children":[{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"value","id":"value"}],"line":"142"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addAll","id":"addAll1()","comment":"\nAppends all objects of [iterable] to the end of this list.\n\nExtends the length of the list by the number of objects in [iterable].\nThrows an [UnsupportedError] if this list is fixed-length.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"150"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"sort","id":"sort1()","comment":"\nSorts this list according to the order specified by the [compare] function.\n\nThe [compare] function must act as a [Comparator].\n\nThe default List implementations use [Comparable.compare] if\n[compare] is omitted.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"compare","id":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"a","id":"a","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/list.dart","line":"165"},{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"b","id":"b","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/list.dart","line":"165"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"165"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"indexOf","id":"indexOf2()","comment":"\nReturns the first index of [element] in this list.\n\nSearches the list from index [start] to the length of the list.\nThe first time an object [:o:] is encountered so that [:o == element:],\nthe index of [:o:] is returned.\nReturns -1 if [element] is not found.\n","children":[{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"start","id":"start"}],"line":"175"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lastIndexOf","id":"lastIndexOf2()","comment":"\nReturns the last index of [element] in this list.\n\nSearches the list backwards from index [start] to 0.\n\nThe first time an object [:o:] is encountered so that [:o == element:],\nthe index of [:o:] is returned.\n\nIf [start] is not provided, it defaults to [:this.length - 1:].\n\nReturns -1 if [element] is not found.\n","children":[{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"}],"line":"189"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","comment":"\nRemoves all objects from this list;\nthe length of the list becomes zero.\n\nThrows an [UnsupportedError], and retains all objects, if this\nis a fixed-length list.\n","line":"198"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insert","id":"insert2()","comment":"\nInserts the object at position [index] in this list.\n\nThis increases the length of the list by one and shifts all objects\nat or after the index towards the end of the list.\n\nAn error occurs if the [index] is less than 0 or greater than length.\nAn [UnsupportedError] occurs if the list is fixed-length.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"element","id":"element"}],"line":"209"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAll","id":"insertAll2()","comment":"\nInserts all objects of [iterable] at position [index] in this list.\n\nThis increases the length of the list by the length of [iterable] and\nshifts all later objects towards the end of the list.\n\nAn error occurs if the [index] is less than 0 or greater than length.\nAn [UnsupportedError] occurs if the list is fixed-length.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"220"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setAll","id":"setAll2()","comment":"\nOverwrites objects of `this` with the objects of [iterable], starting\nat position [index] in this list.\n\nThis operation does not increase the length of `this`.\n\nAn error occurs if the [index] is less than 0 or greater than length.\nAn error occurs if the [iterable] is longer than [length] - [index].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"231"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"remove","id":"remove1()","comment":"\nRemoves the first occurence of [value] from this list.\n\nReturns true if [value] was in the list.\nReturns false otherwise.\n\nThe method has no effect if [value] was not in the list.\n\nAn [UnsupportedError] occurs if the list is fixed-length.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"243"},{"returnType":{"name":"E","refId":"dart.core/List/E"},"kind":"method","name":"removeAt","id":"removeAt1()","comment":"\nRemoves the object at position [index] from this list.\n\nThis method reduces the length of `this` by one and moves all later objects\ndown by one position.\n\nReturns the removed object.\n\n* Throws an [ArgumentError] if [index] is not an [int].\n* Throws a [RangeError] if the [index] is out of range for this list.\n* Throws an [UnsupportedError], and doesn't remove the object,\nif this is a fixed-length list.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"258"},{"returnType":{"name":"E","refId":"dart.core/List/E"},"kind":"method","name":"removeLast","id":"removeLast0()","comment":"\nPops and returns the last object in this list.\n\nThrows an [UnsupportedError] if this is a fixed-length list.\n","line":"265"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeWhere","id":"removeWhere1()","comment":"\nRemoves all objects from this list that satisfy [test].\n\nAn object [:o:] satisfies [test] if [:test(o):] is true.\n\nThrows an [UnsupportedError] if this is a fixed-length list.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/list.dart","line":"274"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"274"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"retainWhere","id":"retainWhere1()","comment":"\nRemoves all objects from this list that fail to satisfy [test].\n\nAn object [:o:] satisfies [test] if [:test(o):] is true.\n\nThrows an [UnsupportedError] if this is a fixed-length list.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/list.dart","line":"283"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"283"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"method","name":"sublist","id":"sublist2()","comment":"\nReturns a new list containing the objects\nfrom [start] inclusive to [end] exclusive.\n\nIf [end] is omitted, the [length] of `this` is used.\n\nAn error occurs if [start] is outside the range `0` .. `length` or if\n[end] is outside the range `start` .. `length`.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"294"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"method","name":"getRange","id":"getRange2()","comment":"\nReturns an [Iterable] that iterates over the objects in the range\n[start] inclusive to [end] exclusive.\n\nAn error occurs if [end] is before [start].\n\nAn error occurs if the [start] and [end] are not valid ranges at the time\nof the call to this method. The returned [Iterable] behaves like\n`skip(start).take(end - start)`. That is, it does not throw exceptions\nif `this` changes size.\n\nExample:\n\n    var list = [1, 2, 3, 4, 5];\n    var range = list.getRange(1, 4);\n    print(range.join(', '));  // => 2, 3, 4\n    list.length = 3;\n    print(range.join(', '));  // => 2, 3\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"315"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setRange","id":"setRange4()","comment":"\nCopies the objects of [iterable], skipping [skipCount] objects first,\ninto the range [start] inclusive to [end] exclusive of `this`.\n\nIf [start] equals [end] and [start]..[end] represents a legal range, this\nmethod has no effect.\n\nAn error occurs if [start]..[end] is not a valid range for `this`.\nAn error occurs if the [iterable] does not have enough objects after\nskipping [skipCount] objects.\n\nExample:\n\n    var list = [1, 2, 3, 4];\n    var list2 = [5, 6, 7, 8, 9];\n    list.setRange(1, 3, list2, 3);\n    print(list);  // => [1, 8, 9, 4]\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"param","name":"iterable","id":"iterable"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"skipCount","id":"skipCount"}],"line":"335"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeRange","id":"removeRange2()","comment":"\nRemoves the objects in the range [start] inclusive to [end] exclusive.\n\nAn error occurs if [start]..[end] is not a valid range for `this`.\nThrows an [UnsupportedError] if this is a fixed-length list.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"343"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"fillRange","id":"fillRange3()","comment":"\nSets the objects in the range [start] inclusive to [end] exclusive\nto the given [fillValue].\n\nAn error occurs if [start]..[end] is not a valid range for `this`.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"E","refId":"dart.core/List/E"},"isOptional":true,"kind":"param","name":"fillValue","id":"fillValue"}],"line":"351"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"replaceRange","id":"replaceRange3()","comment":"\nRemoves the objects in the range [start] inclusive to [end] exclusive\nand replaces them with the contents of the [iterable].\n\nAn error occurs if [start]..[end] is not a valid range for `this`.\n\nExample:\n\n    var list = [1, 2, 3, 4, 5];\n    list.replaceRange(1, 3, [6, 7, 8, 9]);\n    print(list);  // [1, 6, 7, 8, 9, 4, 5]\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"365"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"int","refId":"dart.core/int"},{"name":"E","refId":"dart.core/List/E"}]},"kind":"method","name":"asMap","id":"asMap0()","comment":"\nReturns an unmodifiable [Map] view of `this`.\n\nThe map uses the indices of this list as keys and the corresponding objects\nas values. The `Map.keys` [Iterable] iterates the indices of this list\nin numerical order.\n","line":"374"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","comment":"\nReturns the number of objects in this list.\n\nThe valid indices for a list are `0` through `length - 1`.\n","line":"124"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"property","name":"reversed","id":"reversed","comment":"\nReturns an [Iterable] of the objects in this list in reverse order.\n","line":"155"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"constructor","name":"","id":"1()","comment":"\nCreates a list of the given _length_.\n\nThe created list is fixed-length if _length_ is provided.\nThe list has length 0 and is growable if _length_ is omitted.\n\nAn error occurs if _length_ is negative.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"length","id":"length"}],"line":"53"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"constructor","name":"filled","id":"filled2()","comment":"\nCreates a fixed-length list of the given _length_\nand initializes the value at each position with [fill].\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"},{"ref":{"name":"E","refId":"dart.core/List/E"},"kind":"param","name":"fill","id":"fill"}],"line":"59"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"constructor","name":"from","id":"from2()","comment":"\nCreates a list and initializes it using the contents of [other].\n\nThe [Iterator] of [other] provides the order of the objects.\n\nThis constructor returns a growable list if [growable] is true;\notherwise, it returns a fixed-length list.\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"param","name":"other","id":"other"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"growable","id":"growable"}],"line":"69"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.core/List/E"}]},"kind":"constructor","name":"generate","id":"generate3()","comment":"\nGenerates a list of values.\n\nCreates a list with _length_ positions\nand fills it with values created by calling [generator]\nfor each index in the range `0` .. `length - 1`\nin increasing order.\n\nThe created list is fixed-length unless [growable] is true.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"generator","id":"generator","children":[{"returnType":{"name":"E","refId":"dart.core/List/E"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/list.dart","line":"93"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"growable","id":"growable","line":"94"}],"line":"93"},{"kind":"typeparam","name":"E","id":"E"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/list.dart","line":"44"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Iterable","id":"Iterable","comment":"\nAn object that uses an [Iterator] to serve objects one at a time.\n\nYou can iterate over all objects served by an Iterable object\nusing the for-in loop construct.\nFor example, you can iterate over all of the keys in a [Map],\nbecause Map keys are iterable.\n\n    Map kidsBooks = {'Matilda': 'Roald Dahl',\n                     'Green Eggs and Ham': 'Dr Seuss',\n                     'Where the Wild Things Are': 'Maurice Sendak'};\n    for (var book in kidsBooks.keys) {\n      print('$book was written by ${kidsBooks[book]}');\n    }\n\nThe [List] class and the [Set] class implement this interface,\nas do classes in the [dart:collection](#dart-collection) library.\n\nYou can implement Iterable in your own class.\nIf you do, then an instance of your Iterable class\ncan be the right-hand side of a for-in construct.\n","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"map","id":"map1()","comment":"\nReturns a lazy [Iterable] where each element [:e:] of `this` is replaced\nby the result of [:f(e):].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [f] will\nnot be invoked. The transformed elements will not be cached. Iterating\nmultiple times over the the returned [Iterable] will invoke the supplied\nfunction [f] multiple times on the same element.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"61"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"61"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"where","id":"where1()","comment":"\nReturns a lazy [Iterable] with all elements that satisfy the\npredicate [test].\n\nThis method returns a view of the mapped elements. As long as the\nreturned [Iterable] is not iterated over, the supplied function [test] will\nnot be invoked. Iterating will not cache results, and thus iterating\nmultiple times over the returned [Iterable] will invoke the supplied\nfunction [test] multiple times on the same element.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"73"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"73"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"expand","id":"expand1()","comment":"\nExpands each element of this [Iterable] into zero or more elements.\n\nThe resulting Iterable runs through the elements returned\nby [f] for each element of this, in order.\n\nThe returned [Iterable] is lazy, and calls [f] for each element\nof this every time it's iterated.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"84"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"84"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"contains","id":"contains1()","comment":"\nReturns true if the collection contains an element equal to [element].\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"}],"line":"89"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","comment":"\nApplies the function [f] to each element of this collection.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"94"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"94"},{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"method","name":"reduce","id":"reduce1()","comment":"\nReduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.\n\nExample of calculating the sum of an iterable:\n\n    iterable.reduce((value, element) => value + element);\n\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"105"},{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"105"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"105"},{"kind":"method","name":"fold","id":"fold2()","comment":"\nReduces a collection to a single value by iteratively combining each\nelement of the collection with an existing value using the provided\nfunction.\n\nUse [initialValue] as the initial value, and the function [combine] to\ncreate a new value from the previous one and an element.\n\nExample of calculating the sum of an iterable:\n\n    iterable.fold(0, (prev, element) => prev + element);\n\n","children":[{"kind":"param","name":"initialValue","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"previousValue","id":"previousValue","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"121"},{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"121"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}],"line":"121"}],"line":"120"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"every","id":"every1()","comment":"\nReturns true if every elements of this collection satisify the\npredicate [test]. Returns `false` otherwise.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"127"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"127"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"join","id":"join1()","comment":"\nConverts each element to a [String] and concatenates the strings.\n\nConverts each element to a [String] by calling [Object.toString] on it.\nThen concatenates the strings, optionally separated by the [separator]\nstring.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"136"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"any","id":"any1()","comment":"\nReturns true if one element of this collection satisfies the\npredicate [test]. Returns false otherwise.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"146"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"146"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"toList","id":"toList1()","comment":"\nCreates a [List] containing the elements of this [Iterable].\n\nThe elements are in iteration order. The list is fixed-length\nif [growable] is false.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"growable","id":"growable"}],"line":"154"},{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"toSet","id":"toSet0()","comment":"\nCreates a [Set] containing the elements of this [Iterable].\n","line":"159"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"take","id":"take1()","comment":"\nReturns an [Iterable] with at most [n] elements.\n\nThe returned [Iterable] may contain fewer than [n] elements, if `this`\ncontains fewer than [n] elements.\n\nIt is an error if [n] is negative.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"n","id":"n"}],"line":"187"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"takeWhile","id":"takeWhile1()","comment":"\nReturns an Iterable that stops once [test] is not satisfied anymore.\n\nThe filtering happens lazily. Every new Iterator of the returned\nIterable starts iterating over the elements of `this`.\n\nWhen the iterator encounters an element `e` that does not satisfy [test],\nit discards `e` and moves into the finished state. That is, it does not\nget or provide any more elements.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"199"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"199"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"skip","id":"skip1()","comment":"\nReturns an Iterable that skips the first [n] elements.\n\nIf `this` has fewer than [n] elements, then the resulting Iterable is \nempty.\n\nIt is an error if [n] is negative.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"n","id":"n"}],"line":"209"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"method","name":"skipWhile","id":"skipWhile1()","comment":"\nReturns an Iterable that skips elements while [test] is satisfied.\n\nThe filtering happens lazily. Every new Iterator of the returned\nIterable iterates over all elements of `this`.\n\nAs long as the iterator's elements satisfy [test] they are\ndiscarded. Once an element does not satisfy the [test] the iterator stops\ntesting and uses every later element unconditionally. That is, the elements\nof the returned Iterable are the elements of `this` starting from the\nfirst element that does not satisfy [test].\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"223"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"223"},{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"method","name":"firstWhere","id":"firstWhere2()","comment":"\nReturns the first element that satisfies the given predicate [test].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is `null`, a [StateError] is\nthrown.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"254"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"254"},{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"method","name":"lastWhere","id":"lastWhere2()","comment":"\nReturns the last element that satisfies the given predicate [test].\n\nIf none matches, the result of invoking the [orElse] function is\nreturned. By default, when [orElse] is `null`, a [StateError] is\nthrown.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"263"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"263"},{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"method","name":"singleWhere","id":"singleWhere1()","comment":"\nReturns the single element that satisfies [test]. If no or more than one\nelement match then a [StateError] is thrown.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"269"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"269"},{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"method","name":"elementAt","id":"elementAt1()","comment":"\nReturns the [index]th element.\n\nIf `this` has fewer than [index] elements throws a [RangeError].\n\nNote: if `this` does not have a deterministic iteration order then the\nfunction may simply return any element without any iteration if there are\nat least [index] elements in `this`.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"280"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"property","name":"iterator","id":"iterator","comment":"\nReturns an Iterator that iterates over this Iterable object.\n","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","comment":"\nReturns the number of elements in [this].\n\nCounting all elements may be involve running through all elements and can\ntherefore be slow.\n","line":"167"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","comment":"\nReturns true if there is no element in this collection.\n","line":"172"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","comment":"\nReturns true if there is at least one element in this collection.\n","line":"177"},{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"property","name":"first","id":"first","comment":"\nReturns the first element.\n\nIf `this` is empty throws a [StateError]. Otherwise this method is\nequivalent to [:this.elementAt(0):]\n","line":"231"},{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"property","name":"last","id":"last","comment":"\nReturns the last element.\n\nIf `this` is empty throws a [StateError].\n","line":"238"},{"ref":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"property","name":"single","id":"single","comment":"\nReturns the single element in `this`.\n\nIf `this` is empty or has more than one element throws a [StateError].\n","line":"245"},{"kind":"constructor","name":"","id":"0()","line":"30"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.core/Iterable/E"}]},"kind":"constructor","name":"generate","id":"generate2()","comment":"\nCreates an Iterable that generates its elements dynamically.\n\nThe Iterators created by the Iterable count from\nzero to [:count - 1:] while iterating, and call [generator]\nwith that index to create the next value.\n\nAs an Iterable, [:new Iterable.generate(n, generator)):] is equivalent to\n[:const [0, ..., n - 1].map(generator):]\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"generator","id":"generator","children":[{"returnType":{"name":"E","refId":"dart.core/Iterable/E"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"42"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"42"},{"kind":"typeparam","name":"E","id":"E"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/iterable.dart","line":"29"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Comparable","id":"Comparable","comment":"\nInterface used by types that have an intrinsic ordering.\n","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareTo","id":"compareTo1()","comment":"\nCompares this object to another [Comparable]\n\nReturns a value like a [Comparator] when comparing [:this:] to [other].\n\nMay throw an [ArgumentError] if [other] is of a type that\nis not comparable to [:this:].\n","children":[{"ref":{"name":"T","refId":"dart.core/Comparable/T"},"kind":"param","name":"other","id":"other"}],"line":"35"},{"returnType":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"method","name":"compare","id":"compare2()","comment":"\nCompare one comparable to another.\n\nThis utility function is used as the default comparator\nfor the [List] sort function.\n","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"kind":"param","name":"a","id":"a"},{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"kind":"param","name":"b","id":"b"}],"line":"43"},{"kind":"typeparam","name":"T","id":"T"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/comparable.dart","line":"26"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/core.dart","line":"153"},{"kind":"library","name":"dart:collection","id":"dart.collection","comment":"\nClasses and utilities that supplement the collection support in dart:core.\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]}],"kind":"class","name":"ListMixin","id":"ListMixin","comment":"\nBase implementation of a [List] class.\n\nThis class can be used as a mixin.\n\nThis implements all read operations using only the `length` and\n`operator[]` members. It implements write operations using those and\n`length=` and `operator[]=`\n","children":[{"returnType":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"method","name":"elementAt","id":"elementAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"31"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"action","id":"action","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"33"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"33"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"contains","id":"contains1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"}],"line":"63"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"every","id":"every1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"74"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"74"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"any","id":"any1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"85"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"85"},{"kind":"method","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"96"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"96"},{"kind":"method","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"109"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"109"},{"returnType":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"method","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"122"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"122"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"join","id":"join1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"143"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"where","id":"where1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"172"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"172"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"map","id":"map1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"174"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"174"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"expand","id":"expand1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"176"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"176"},{"returnType":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"method","name":"reduce","id":"reduce1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"returnType":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"previousValue","id":"previousValue","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"179"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"179"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"179"},{"kind":"method","name":"fold","id":"fold2()","children":[{"kind":"param","name":"initialValue","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"previousValue","id":"previousValue","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"188"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"188"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"188"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"skip","id":"skip1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"200"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"202"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"202"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"take","id":"take1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"count","id":"count"}],"line":"206"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"208"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"208"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"toList","id":"toList1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"growable","id":"growable"}],"line":"212"},{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"toSet","id":"toSet0()","line":"225"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element"}],"line":"234"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"238"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"remove","id":"remove1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"}],"line":"244"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeWhere","id":"removeWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"255"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"255"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"retainWhere","id":"retainWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"259"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"259"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_filter","id":"_filter3()","children":[{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"source","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"264"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}],"line":"264"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"retainMatching","id":"retainMatching","line":"265"}],"isPrivate":true,"line":"263"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"283"},{"returnType":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"method","name":"removeLast","id":"removeLast0()","line":"287"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"sort","id":"sort1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"compare","id":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"a","id":"a","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"296"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"b","id":"b","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"296"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"296"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"int","refId":"dart.core/int"},{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"asMap","id":"asMap0()","line":"304"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_rangeCheck","id":"_rangeCheck2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"isPrivate":true,"line":"308"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"sublist","id":"sublist2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"317"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"method","name":"getRange","id":"getRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"328"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeRange","id":"removeRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"333"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"fillRange","id":"fillRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"isOptional":true,"kind":"param","name":"fill","id":"fill"}],"line":"340"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setRange","id":"setRange4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"param","name":"iterable","id":"iterable"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"skipCount","id":"skipCount"}],"line":"347"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"param","name":"newContents","id":"newContents"}],"line":"379"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"indexOf","id":"indexOf2()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"startIndex","id":"startIndex"}],"line":"385"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lastIndexOf","id":"lastIndexOf2()","comment":"\nReturns the last index in the list [a] of the given [element], starting\nthe search at index [startIndex] to 0.\nReturns -1 if [element] is not found.\n","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"startIndex","id":"startIndex"}],"line":"405"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insert","id":"insert2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"param","name":"element","id":"element"}],"line":"424"},{"returnType":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"method","name":"removeAt","id":"removeAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"441"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAll","id":"insertAll2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"448"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setAll","id":"setAll2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"465"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"477"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"property","name":"iterator","id":"iterator","line":"29"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"43"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","line":"45"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"property","name":"first","id":"first","line":"47"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"property","name":"last","id":"last","line":"52"},{"ref":{"name":"E","refId":"dart.collection/ListMixin/E"},"kind":"property","name":"single","id":"single","line":"57"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/ListMixin/E"}]},"kind":"property","name":"reversed","id":"reversed","line":"475"},{"ref":{"name":"List","refId":"dart.core/List"},"isStatic":true,"kind":"variable","name":"_toStringList","id":"_toStringList","isPrivate":true,"line":"26"},{"kind":"typeparam","name":"E","id":"E"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/list.dart","line":"24"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]}],"kind":"class","name":"IterableBase","id":"IterableBase","comment":"\nBase class for implementing [Iterable].\n\nThis class implements all methods of [Iterable] except [Iterable.iterator]\nin terms of `iterator`.\n","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"map","id":"map1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"204"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"204"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"where","id":"where1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"206"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"206"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"expand","id":"expand1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"208"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"208"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"contains","id":"contains1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"}],"line":"211"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"218"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"218"},{"returnType":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"method","name":"reduce","id":"reduce1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"returnType":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"222"},{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"222"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"222"},{"kind":"method","name":"fold","id":"fold2()","children":[{"kind":"param","name":"initialValue","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"previousValue","id":"previousValue","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"235"},{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"235"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}],"line":"235"}],"line":"234"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"every","id":"every1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"241"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"241"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"join","id":"join1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"248"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"any","id":"any1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"element","id":"element","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"266"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"266"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"toList","id":"toList1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"growable","id":"growable"}],"line":"273"},{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"toSet","id":"toSet0()","line":"276"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"take","id":"take1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"n","id":"n"}],"line":"291"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"takeWhile","id":"takeWhile1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"295"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"295"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"skip","id":"skip1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"n","id":"n"}],"line":"299"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/IterableBase/E"}]},"kind":"method","name":"skipWhile","id":"skipWhile1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"303"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"303"},{"kind":"method","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"335"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"335"},{"kind":"method","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"343"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"343"},{"returnType":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"method","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"param","name":"value","id":"value","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"357"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"357"},{"returnType":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"method","name":"elementAt","id":"elementAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"373"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"278"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"287"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isNotEmpty","id":"isNotEmpty","line":"289"},{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"property","name":"first","id":"first","line":"307"},{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"property","name":"last","id":"last","line":"315"},{"ref":{"name":"E","refId":"dart.collection/IterableBase/E"},"kind":"property","name":"single","id":"single","line":"327"},{"kind":"constructor","name":"","id":"0()","line":"202"},{"kind":"typeparam","name":"E","id":"E"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/iterable.dart","line":"199"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/collection/collection.dart","line":"8"},{"kind":"library","name":"package:html5lib/src/list_proxy.dart","id":"list_proxy","comment":"A [List] proxy that you can subclass. ","children":[{"superclass":{"name":"IterableBase","refId":"dart.collection/IterableBase","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"interfaces":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]}],"kind":"class","name":"ListProxy","id":"ListProxy","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"remove","id":"remove1()","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"item","id":"item"}],"line":"25"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insert","id":"insert2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"item","id":"item"}],"line":"32"},{"returnType":{"name":"E","refId":"list_proxy/ListProxy/E"},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"46"},{"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"value","id":"value"}],"line":"47"},{"isSetter":true,"kind":"method","name":"length=","id":"length=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"value","id":"value"}],"line":"48"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"value","id":"value"}],"line":"49"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addLast","id":"addLast1()","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"value","id":"value"}],"line":"51"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"param","name":"collection","id":"collection"}],"line":"52"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"sort","id":"sort1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"compare","id":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"a","id":"a","uri":"package:html5lib/src/list_proxy.dart","line":"53"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"b","id":"b","uri":"package:html5lib/src/list_proxy.dart","line":"53"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"53"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"indexOf","id":"indexOf2()","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"start","id":"start"}],"line":"55"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lastIndexOf","id":"lastIndexOf2()","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"start","id":"start"}],"line":"56"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"57"},{"returnType":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"method","name":"removeAt","id":"removeAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"59"},{"returnType":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"method","name":"removeLast","id":"removeLast0()","line":"60"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeWhere","id":"removeWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/src/list_proxy.dart","line":"62"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"62"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"retainWhere","id":"retainWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/src/list_proxy.dart","line":"63"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"63"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"method","name":"sublist","id":"sublist2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"65"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"method","name":"getRange","id":"getRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"67"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setRange","id":"setRange4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"param","name":"from","id":"from"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"startFrom","id":"startFrom"}],"line":"69"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeRange","id":"removeRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"length","id":"length"}],"line":"72"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAll","id":"insertAll2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"73"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"int","refId":"dart.core/int"},{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"method","name":"asMap","id":"asMap0()","line":"79"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"param","name":"newContents","id":"newContents"}],"line":"81"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setAll","id":"setAll2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"84"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"fillRange","id":"fillRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"isOptional":true,"kind":"param","name":"fillValue","id":"fillValue"}],"line":"86"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"37"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"property","name":"last","id":"last","line":"38"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"property","name":"first","id":"first","line":"39"},{"ref":{"name":"E","refId":"list_proxy/ListProxy/E"},"kind":"property","name":"single","id":"single","line":"40"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"property","name":"iterator","id":"iterator","line":"43"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"kind":"property","name":"reversed","id":"reversed","line":"77"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"isFinal":true,"kind":"variable","name":"_list","id":"_list","comment":"The inner [List<T>] with the actual storage. ","isPrivate":true,"line":"13"},{"kind":"constructor","name":"","id":"1()","comment":"\nCreates a list proxy.\nYou can optionally specify the list to use for [storage] of the items,\notherwise this will create a [List<E>].\n","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"E","refId":"list_proxy/ListProxy/E"}]},"isOptional":true,"kind":"param","name":"storage","id":"storage"}],"line":"20"},{"kind":"typeparam","name":"E","id":"E"}],"line":"10"}],"uri":"package:html5lib/src/list_proxy.dart","line":"5"}],"kind":"library","name":"package:html5lib/dom.dart","id":"dom","comment":"\nA simple tree API that results from parsing html. Intended to be compatible\nwith dart:html, but right now it resembles the classic JS DOM.\n","children":[{"superclass":{"name":"IterableBase+ListMixin","refId":"dom/IterableBase+ListMixin"},"interfaces":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]}],"kind":"class","name":"FilteredElementList","id":"FilteredElementList","comment":"\nAn indexable collection of a node's descendants in the document tree,\nfiltered so that only elements are in the collection.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"forEach","id":"forEach1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"718"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"718"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value"}],"line":"722"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"length=","id":"length=1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"newLength","id":"newLength"}],"line":"726"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"join","id":"join1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"defaultValue":"\"\"","isOptional":true,"kind":"param","name":"separator","id":"separator"}],"line":"737"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value"}],"line":"739"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"743"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"contains","id":"contains1()","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element"}],"line":"749"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"sort","id":"sort1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"kind":"param","name":"compare","id":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"a","id":"a","uri":"package:html5lib/dom.dart","line":"755"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"b","id":"b","uri":"package:html5lib/dom.dart","line":"755"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"755"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setRange","id":"setRange4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"param","name":"iterable","id":"iterable"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"skipCount","id":"skipCount","line":"760"}],"line":"759"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"fillRange","id":"fillRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Element","refId":"dom/Element"},"isOptional":true,"kind":"param","name":"fillValue","id":"fillValue"}],"line":"764"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"768"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeRange","id":"removeRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"772"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"776"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"removeLast","id":"removeLast0()","line":"782"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"map","id":"map1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"790"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"790"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"method","name":"where","id":"where1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"791"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"791"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"method","name":"expand","id":"expand1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"792"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"792"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insert","id":"insert2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value"}],"line":"794"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAll","id":"insertAll2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"param","name":"iterable","id":"iterable"}],"line":"798"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"removeAt","id":"removeAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"802"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"remove","id":"remove1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"element","id":"element"}],"line":"808"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"reduce","id":"reduce1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value","uri":"package:html5lib/dom.dart","line":"820"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"820"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"820"},{"kind":"method","name":"fold","id":"fold2()","children":[{"kind":"param","name":"initialValue","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"combine","id":"combine","children":[{"kind":"functiontype","name":"Function","id":"Function","children":[{"kind":"param","name":"previousValue","id":"previousValue","uri":"package:html5lib/dom.dart","line":"825"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"825"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}],"line":"825"}],"line":"824"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"every","id":"every1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"829"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"829"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"any","id":"any1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"f","id":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element","uri":"package:html5lib/dom.dart","line":"830"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"830"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"method","name":"toList","id":"toList1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"isNamed":true,"kind":"param","name":"growable","id":"growable"}],"line":"831"},{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"method","name":"toSet","id":"toSet0()","line":"833"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"firstWhere","id":"firstWhere2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value","uri":"package:html5lib/dom.dart","line":"834"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"834"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"lastWhere","id":"lastWhere2()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value","uri":"package:html5lib/dom.dart","line":"838"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"isNamed":true,"kind":"param","name":"orElse","id":"orElse","children":[{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"838"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"singleWhere","id":"singleWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"value","id":"value","uri":"package:html5lib/dom.dart","line":"842"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"842"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"elementAt","id":"elementAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"846"},{"returnType":{"name":"Element","refId":"dom/Element"},"isOperator":true,"kind":"method","name":"[]","id":"[]1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"}],"line":"852"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"method","name":"sublist","id":"sublist2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"kind":"param","name":"end","id":"end"}],"line":"854"},{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"method","name":"getRange","id":"getRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"}],"line":"856"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"indexOf","id":"indexOf2()","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"start","id":"start"}],"line":"858"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"lastIndexOf","id":"lastIndexOf2()","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"element","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"null","isOptional":true,"kind":"param","name":"start","id":"start"}],"line":"861"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"property","name":"_filtered","id":"_filtered","isPrivate":true,"line":"715"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"property","name":"reversed","id":"reversed","line":"753"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"isEmpty","id":"isEmpty","line":"850"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"length","id":"length","line":"851"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"property","name":"iterator","id":"iterator","line":"853"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"property","name":"first","id":"first","line":"866"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"property","name":"last","id":"last","line":"868"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"property","name":"single","id":"single","line":"870"},{"ref":{"name":"Node","refId":"dom/Node"},"isFinal":true,"kind":"variable","name":"_node","id":"_node","isPrivate":true,"line":"697"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dom/Node"}]},"isFinal":true,"kind":"variable","name":"_childNodes","id":"_childNodes","isPrivate":true,"line":"698"},{"kind":"constructor","name":"","id":"1()","comment":"\nCreates a collection of the elements that descend from a node.\n\nExample usage:\n\n    var filteredElements = new FilteredElementList(query(\"#container\"));\n    // filteredElements is [a, b, c].\n","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"node","id":"node"}],"line":"708"}],"line":"694"},{"superclass":{"name":"ListProxy","refId":"list_proxy/ListProxy","arguments":[{"name":"Node","refId":"dom/Node"}]},"kind":"class","name":"NodeList","id":"NodeList","children":[{"returnType":{"name":"Node","refId":"dom/Node"},"kind":"method","name":"_setParent","id":"_setParent1()","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"node","id":"node"}],"isPrivate":true,"line":"596"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"add","id":"add1()","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"value","id":"value"}],"line":"604"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addLast","id":"addLast1()","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"value","id":"value"}],"line":"608"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addAll","id":"addAll1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Node","refId":"dom/Node"}]},"kind":"param","name":"collection","id":"collection"}],"line":"610"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insert","id":"insert2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"value","id":"value"}],"line":"623"},{"returnType":{"name":"Node","refId":"dom/Node"},"kind":"method","name":"removeLast","id":"removeLast0()","line":"627"},{"returnType":{"name":"Node","refId":"dom/Node"},"kind":"method","name":"removeAt","id":"removeAt1()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"i","id":"i"}],"line":"629"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"clear","id":"clear0()","line":"631"},{"returnType":{"name":"void","refId":"void"},"isOperator":true,"kind":"method","name":"[]=","id":"[]=2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"value","id":"value"}],"line":"636"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setRange","id":"setRange4()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"rangeLength","id":"rangeLength"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dom/Node"}]},"kind":"param","name":"from","id":"from"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"kind":"param","name":"startFrom","id":"startFrom","line":"644"}],"line":"643"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"replaceRange","id":"replaceRange3()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"end","id":"end"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Node","refId":"dom/Node"}]},"kind":"param","name":"newContents","id":"newContents"}],"line":"657"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeRange","id":"removeRange2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"start","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"rangeLength","id":"rangeLength"}],"line":"662"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeWhere","id":"removeWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"e","id":"e","uri":"package:html5lib/dom.dart","line":"667"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"667"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"retainWhere","id":"retainWhere1()","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"test","id":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Element","refId":"dom/Element"},"kind":"param","name":"e","id":"e","uri":"package:html5lib/dom.dart","line":"674"}],"uri":"file:///usr/local/Cellar/dart-editor/27776/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"674"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAll","id":"insertAll2()","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"index","id":"index"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dom/Node"}]},"kind":"param","name":"nodes","id":"nodes"}],"line":"681"},{"ref":{"name":"Node","refId":"dom/Node"},"kind":"property","name":"first","id":"first","line":"594"},{"ref":{"name":"Node","refId":"dom/Node"},"kind":"variable","name":"_parent","id":"_parent","isPrivate":true,"line":"590"},{"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"592"}],"line":"587"},{"superclass":{"name":"Node","refId":"dom/Node"},"kind":"class","name":"Comment","id":"Comment","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"574"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addOuterHtml","id":"_addOuterHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"576"},{"returnType":{"name":"Comment","refId":"dom/Comment"},"kind":"method","name":"clone","id":"clone0()","line":"580"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"572"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"data","id":"data","line":"568"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"data","refId":"dom/Comment/data"},"kind":"param","name":"data","id":"data"}],"line":"570"}],"line":"567"},{"superclass":{"name":"Node","refId":"dom/Node"},"kind":"class","name":"Element","id":"Element","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"504"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addOuterHtml","id":"_addOuterHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"509"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"clone","id":"clone0()","line":"550"},{"isSetter":true,"kind":"method","name":"id=","id":"id=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"558"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"502"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"id","id":"id","line":"553"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"namespace","id":"namespace","line":"441"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_START_TAG_REGEXP","id":"_START_TAG_REGEXP","isPrivate":true,"line":"448"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"_CUSTOM_PARENT_TAG_MAP","id":"_CUSTOM_PARENT_TAG_MAP","isPrivate":true,"line":"450"},{"kind":"constructor","name":"","id":"2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"initializedField":{"name":"namespace","refId":"dom/Element/namespace"},"kind":"param","name":"namespace","id":"namespace"}],"line":"444"},{"kind":"constructor","name":"tag","id":"tag1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"446"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"constructor","name":"html","id":"html1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"}],"line":"469"}],"line":"440"},{"superclass":{"name":"Node","refId":"dom/Node"},"kind":"class","name":"Text","id":"Text","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"425"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addOuterHtml","id":"_addOuterHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"427"},{"returnType":{"name":"Text","refId":"dom/Text"},"kind":"method","name":"clone","id":"clone0()","line":"437"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"423"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"value","id":"value","line":"419"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"value","refId":"dom/Text/value"},"kind":"param","name":"value","id":"value"}],"line":"421"}],"line":"417"},{"superclass":{"name":"Node","refId":"dom/Node"},"kind":"class","name":"DocumentType","id":"DocumentType","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"397"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addOuterHtml","id":"_addOuterHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"410"},{"returnType":{"name":"DocumentType","refId":"dom/DocumentType"},"kind":"method","name":"clone","id":"clone0()","line":"414"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"395"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"publicId","id":"publicId","line":"390"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"systemId","id":"systemId","line":"391"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"publicId","refId":"dom/DocumentType/publicId"},"kind":"param","name":"publicId","id":"publicId"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"systemId","refId":"dom/DocumentType/systemId"},"kind":"param","name":"systemId","id":"systemId"}],"line":"393"}],"line":"389"},{"superclass":{"name":"Document","refId":"dom/Document"},"kind":"class","name":"DocumentFragment","id":"DocumentFragment","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"384"},{"returnType":{"name":"DocumentFragment","refId":"dom/DocumentFragment"},"kind":"method","name":"clone","id":"clone0()","line":"386"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"382"},{"kind":"constructor","name":"","id":"0()","line":"379"},{"returnType":{"name":"DocumentFragment","refId":"dom/DocumentFragment"},"kind":"constructor","name":"html","id":"html1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"}],"line":"380"}],"line":"378"},{"superclass":{"name":"Node","refId":"dom/Node"},"kind":"class","name":"Document","id":"Document","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"371"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addOuterHtml","id":"_addOuterHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"373"},{"returnType":{"name":"Document","refId":"dom/Document"},"kind":"method","name":"clone","id":"clone0()","line":"375"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"365"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"property","name":"head","id":"head","line":"368"},{"ref":{"name":"Element","refId":"dom/Element"},"kind":"property","name":"body","id":"body","line":"369"},{"kind":"constructor","name":"","id":"0()","line":"362"},{"returnType":{"name":"Document","refId":"dom/Document"},"kind":"constructor","name":"html","id":"html1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"}],"line":"363"}],"line":"361"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Node","id":"Node","comment":"Really basic implementation of a DOM-core like Node. ","children":[{"returnType":{"name":"Node","refId":"dom/Node"},"kind":"method","name":"clone","id":"clone0()","comment":"\nReturn a shallow copy of the current node i.e. a node with the same\nname and attributes but with no parent or child nodes.\n","line":"152"},{"isSetter":true,"kind":"method","name":"innerHtml=","id":"innerHtml=1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"177"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addOuterHtml","id":"_addOuterHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"184"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_addInnerHtml","id":"_addInnerHtml1()","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"kind":"param","name":"str","id":"str"}],"isPrivate":true,"line":"186"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"190"},{"returnType":{"name":"Node","refId":"dom/Node"},"kind":"method","name":"remove","id":"remove0()","line":"192"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertBefore","id":"insertBefore2()","comment":"\nInsert [node] as a child of the current node, before [refNode] in the\nlist of child nodes. Raises [UnsupportedOperationException] if [refNode]\nis not a child of the current node. If refNode is null, this adds to the\nend of the list.\n","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"node","id":"node"},{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"refNode","id":"refNode"}],"line":"206"},{"returnType":{"name":"Node","refId":"dom/Node"},"kind":"method","name":"replaceWith","id":"replaceWith1()","comment":"Replaces this node with another node. ","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"otherNode","id":"otherNode"}],"line":"215"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"hasContent","id":"hasContent0()","comment":"Return true if the node has children or text. ","line":"225"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reparentChildren","id":"reparentChildren1()","comment":"\nMove all the children of the current node to [newParent].\nThis is needed so that trees that don't store text as nodes move the\ntext in the correct way.\n","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"newParent","id":"newParent"}],"line":"237"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"query","id":"query1()","comment":"\nSeaches for the first descendant node matching the given selectors, using a\npreorder traversal. NOTE: right now, this supports only a single type\nselectors, e.g. `node.query('div')`.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors"}],"line":"247"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"method","name":"queryAll","id":"queryAll1()","comment":"\nReturns all descendant nodes matching the given selectors, using a\npreorder traversal. NOTE: right now, this supports only a single type\nselectors, e.g. `node.queryAll('div')`.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors"}],"line":"254"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"hasChildNodes","id":"hasChildNodes0()","line":"260"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"contains","id":"contains1()","children":[{"ref":{"name":"Node","refId":"dom/Node"},"kind":"param","name":"node","id":"node"}],"line":"262"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"_typeSelector","id":"_typeSelector1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors"}],"isPrivate":true,"line":"264"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_isTypeSelector","id":"_isTypeSelector1()","comment":"\nChecks if this is a type selector.\nSee <http://www.w3.org/TR/CSS2/grammar.html>.\nNote: this doesn't support '*', the universal selector, non-ascii chars or\nescape chars.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selector","id":"selector"}],"isPrivate":true,"line":"278"},{"returnType":{"name":"Element","refId":"dom/Element"},"kind":"method","name":"_queryType","id":"_queryType1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"tag","id":"tag"}],"isPrivate":true,"line":"314"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_queryAllType","id":"_queryAllType2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"tag","id":"tag"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"param","name":"results","id":"results"}],"isPrivate":true,"line":"324"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_ensureAttributeSpans","id":"_ensureAttributeSpans0()","comment":"Initialize [attributeSpans] using [sourceSpan]. ","isPrivate":true,"line":"333"},{"ref":{"name":"LinkedHashMap","refId":"dart.collection/LinkedHashMap","arguments":[{"name":"FileSpan","refId":"source_maps.span/FileSpan"}]},"kind":"property","name":"attributeSpans","id":"attributeSpans","comment":"\nIf [sourceSpan] is available, this contains the spans of each attribute.\nThe span of an attribute is the entire attribute, including the name and\nquotes (if any). For example, the span of \"attr\" in `<a attr=\"value\">`\nwould be the text `attr=\"value\"`.\n","line":"124"},{"ref":{"name":"LinkedHashMap","refId":"dart.collection/LinkedHashMap","arguments":[{"name":"FileSpan","refId":"source_maps.span/FileSpan"}]},"kind":"property","name":"attributeValueSpans","id":"attributeValueSpans","comment":"\nIf [sourceSpan] is available, this contains the spans of each attribute's\nvalue. Unlike [attributeSpans], this span will inlcude only the value.\nFor example, the value span of \"attr\" in `<a attr=\"value\">` would be the\ntext `value`.\n","line":"135"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"property","name":"children","id":"children","line":"140"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"namespace","id":"namespace","line":"154"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"value","id":"value","comment":"The value of the current node (applies to text nodes and comments). ","line":"158"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"$dom_nodeType","id":"$dom_nodeType","line":"161"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"nodeType","id":"nodeType","line":"163"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"outerHtml","id":"outerHtml","line":"165"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"innerHtml","id":"innerHtml","line":"171"},{"ref":{"name":"Pair","refId":"utils/Pair","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"nameTuple","id":"nameTuple","line":"227"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ATTRIBUTE_NODE","id":"ATTRIBUTE_NODE","line":"68"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CDATA_SECTION_NODE","id":"CDATA_SECTION_NODE","line":"69"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"COMMENT_NODE","id":"COMMENT_NODE","line":"70"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DOCUMENT_FRAGMENT_NODE","id":"DOCUMENT_FRAGMENT_NODE","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DOCUMENT_NODE","id":"DOCUMENT_NODE","line":"72"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DOCUMENT_TYPE_NODE","id":"DOCUMENT_TYPE_NODE","line":"73"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ELEMENT_NODE","id":"ELEMENT_NODE","line":"74"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ENTITY_NODE","id":"ENTITY_NODE","line":"75"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ENTITY_REFERENCE_NODE","id":"ENTITY_REFERENCE_NODE","line":"76"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NOTATION_NODE","id":"NOTATION_NODE","line":"77"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PROCESSING_INSTRUCTION_NODE","id":"PROCESSING_INSTRUCTION_NODE","line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"TEXT_NODE","id":"TEXT_NODE","line":"79"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"tagName","id":"tagName","comment":"The tag name associated with the node. ","line":"83"},{"ref":{"name":"Node","refId":"dom/Node"},"kind":"variable","name":"parent","id":"parent","comment":"The parent of the current node (or null for the document node). ","line":"86"},{"ref":{"name":"LinkedHashMap","refId":"dart.collection/LinkedHashMap","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"variable","name":"attributes","id":"attributes","comment":"\nA map holding name, value pairs for attributes of the node.\n\nNote that attribute order needs to be stable for serialization, so we use a\nLinkedHashMap. Each key is a [String] or [AttributeName].\n","line":"95"},{"ref":{"name":"NodeList","refId":"dom/NodeList"},"isFinal":true,"kind":"variable","name":"nodes","id":"nodes","comment":"\nA list of child nodes of the current node. This must\ninclude all elements but not necessarily other node types.\n","line":"101"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dom/Element"}]},"kind":"variable","name":"_elements","id":"_elements","isPrivate":true,"line":"103"},{"ref":{"name":"FileSpan","refId":"source_maps.span/FileSpan"},"kind":"variable","name":"sourceSpan","id":"sourceSpan","comment":"The source span of this node, if it was created by the [HtmlParser]. ","line":"108"},{"ref":{"name":"LinkedHashMap","refId":"dart.collection/LinkedHashMap","arguments":[{"name":"FileSpan","refId":"source_maps.span/FileSpan"}]},"kind":"variable","name":"_attributeSpans","id":"_attributeSpans","comment":"The attribute spans if requested. Otherwise null. ","isPrivate":true,"line":"111"},{"ref":{"name":"LinkedHashMap","refId":"dart.collection/LinkedHashMap","arguments":[{"name":"FileSpan","refId":"source_maps.span/FileSpan"}]},"kind":"variable","name":"_attributeValueSpans","id":"_attributeValueSpans","isPrivate":true,"line":"112"},{"kind":"constructor","name":"","id":"1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"tagName","refId":"dom/Node/tagName"},"kind":"param","name":"tagName","id":"tagName"}],"line":"114"}],"line":"67"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"interfaces":[{"name":"Comparable","refId":"dart.core/Comparable"}],"kind":"class","name":"AttributeName","id":"AttributeName","children":[{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"33"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"compareTo","id":"compareTo1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"49"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"x","id":"x"}],"line":"60"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"42"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"prefix","id":"prefix","comment":"The namespace prefix, e.g. `xlink`. ","line":"23"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"name","id":"name","comment":"The attribute name, e.g. `title`. ","line":"26"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"namespace","id":"namespace","comment":"The namespace url, e.g. `http://www.w3.org/1999/xlink` ","line":"29"},{"kind":"constructor","name":"","id":"3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"prefix","refId":"dom/AttributeName/prefix"},"kind":"param","name":"prefix","id":"prefix"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"name","refId":"dom/AttributeName/name"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"initializedField":{"name":"namespace","refId":"dom/AttributeName/namespace"},"kind":"param","name":"namespace","id":"namespace"}],"line":"31"}],"line":"21"}],"uri":"package:html5lib/dom.dart","line":"5"}
{"dependencies":[{"id":"dart.core","uri":"file:///usr/local/Cellar/dart-editor/25990/dart-sdk/lib/core/core.dart","name":"dart:core","children":[{"id":"Object","comment":"\nEverything in Dart is an [Object].\n","uri":"file:///usr/local/Cellar/dart-editor/25990/dart-sdk/lib/core/object.dart","name":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","comment":"\nReturns a string representation of this object.\n","name":"toString","line":"48","kind":"method"},{"id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"id":"invocation","name":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","line":"65","kind":"property"},{"id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"}],"id":"bot_git","uri":"package:bot_io/bot_git.dart","name":"package:bot_io/bot_git.dart","children":[{"returnType":{"refId":"void","name":"void"},"id":"_metaRequireArgumentNotNullOrEmpty1()","uri":"package:bot_io/src/bot_git/git.dart","name":"_metaRequireArgumentNotNullOrEmpty","isPrivate":true,"children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"argName","name":"argName","kind":"param"}],"line":"13","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"requireArgumentValidSha12()","uri":"package:bot_io/src/bot_git/git.dart","name":"requireArgumentValidSha1","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","name":"value","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"argName","name":"argName","kind":"param"}],"line":"3","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"id":"PopulateTempDir","comment":"\nA method that populates a [TempDir] asynchronously.\n","uri":"package:bot_io/src/bot_git/git_dir.dart","name":"PopulateTempDir","children":[{"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"id":"dir","name":"dir","kind":"param"}],"line":"510","kind":"typedef"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"_TempDirs","uri":"package:bot_io/src/bot_git/git_dir.dart","name":"_TempDirs","isPrivate":true,"children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/_TempDirs","name":"_TempDirs"}],"name":"Future"},"isStatic":true,"id":"create0()","name":"create","line":"481","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"500","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"id":"dispose0()","name":"dispose","line":"502","kind":"method"},{"ref":{"refId":"bot_git/GitDir","name":"GitDir"},"isFinal":true,"id":"gitDir","name":"gitDir","line":"477","kind":"variable"},{"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"isFinal":true,"id":"gitHostDir","name":"gitHostDir","line":"478","kind":"variable"},{"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"isFinal":true,"id":"gitWorkTreeDir","name":"gitWorkTreeDir","line":"479","kind":"variable"},{"id":"3()","name":"","children":[{"initializedField":{"refId":"bot_git/_TempDirs/gitDir","name":"gitDir"},"ref":{"refId":"bot_git/GitDir","name":"GitDir"},"id":"gitDir","name":"gitDir","kind":"param"},{"initializedField":{"refId":"bot_git/_TempDirs/gitHostDir","name":"gitHostDir"},"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"id":"gitHostDir","name":"gitHostDir","kind":"param"},{"initializedField":{"refId":"bot_git/_TempDirs/gitWorkTreeDir","name":"gitWorkTreeDir"},"ref":{"refId":"bot_io/TempDir","name":"TempDir"},"id":"gitWorkTreeDir","name":"gitWorkTreeDir","kind":"param"}],"line":"498","kind":"constructor"}],"line":"476","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"GitDir","uri":"package:bot_io/src/bot_git/git_dir.dart","name":"GitDir","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"Future"},"id":"getCommitCount1()","name":"getCommitCount","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'HEAD'","id":"branchName","name":"branchName","kind":"param"}],"line":"18","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/Commit","name":"Commit"}],"name":"Future"},"id":"getCommit1()","comment":"\n[rev] should probably be a sha1 to a commit.\nBut GIT lets you do other things.\nSee http://git-scm.com/docs/gitrevisions.html\n","name":"getCommit","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"rev","name":"rev","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"bot_git/Commit","name":"Commit"}],"name":"Map"}],"name":"Future"},"id":"getCommits1()","name":"getCommits","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"'HEAD'","id":"branchName","name":"branchName","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"}],"name":"Future"},"id":"getBranchNames0()","name":"getBranchNames","line":"42","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/BranchReference","name":"BranchReference"}],"name":"Future"},"id":"getBranchReference1()","name":"getBranchReference","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"branchName","name":"branchName","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/BranchReference","name":"BranchReference"}],"name":"List"}],"name":"Future"},"id":"getBranchReferences0()","name":"getBranchReferences","line":"66","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/Tag","name":"Tag"}],"name":"List"}],"name":"Future"},"id":"getTags0()","name":"getTags","line":"76","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/CommitReference","name":"CommitReference"}],"name":"List"}],"name":"Future"},"id":"showRef2()","name":"showRef","children":[{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"heads","name":"heads","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"tags","name":"tags","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/BranchReference","name":"BranchReference"}],"name":"Future"},"id":"getCurrentBranch0()","name":"getCurrentBranch","line":"116","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"bot_git/TreeEntry","name":"TreeEntry"}],"name":"List"}],"name":"Future"},"id":"lsTree3()","name":"lsTree","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"treeish","name":"treeish","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"subTreesOnly","name":"subTreesOnly","line":"127","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","id":"path","name":"path","line":"127","kind":"param"}],"line":"126","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"id":"createOrUpdateBranch3()","comment":"\nReturns the SHA for the new commit if one is created. `null` if the branch is not updated.\n","name":"createOrUpdateBranch","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"branchName","name":"branchName","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"treeSha","name":"treeSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"commitMessage","name":"commitMessage","line":"151","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"id":"_updateBranch3()","comment":"\nReturns the SHA for the new commit if one is created. `null` if the branch is not updated.\n","name":"_updateBranch","isPrivate":true,"children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"targetBranchSha","name":"targetBranchSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"treeSha","name":"treeSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"commitMessage","name":"commitMessage","kind":"param"}],"line":"182","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"id":"commitTree3()","comment":"\nReturns the `SHA1` for the new commit.\n\nSee [git-commit-tree](http://git-scm.com/docs/git-commit-tree)\n","name":"commitTree","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"treeSha","name":"treeSha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"commitMessage","name":"commitMessage","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"isOptional":true,"id":"parentCommitShas","name":"parentCommitShas","kind":"param"}],"line":"198","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Future"},"id":"writeObjects1()","comment":"\nGiven a list of [paths], write those files to the object store\nand return a [Map] where the key is the input path and the value is\nthe SHA of the newly written object.\n","name":"writeObjects","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"paths","name":"paths","kind":"param"}],"line":"229","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.io/ProcessResult","name":"ProcessResult"}],"name":"Future"},"id":"runCommand2()","name":"runCommand","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"args","name":"args","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","id":"throwOnError","name":"throwOnError","kind":"param"}],"line":"246","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"id":"isWorkingTreeClean0()","name":"isWorkingTreeClean","line":"264","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/Commit","name":"Commit"}],"name":"Future"},"id":"populateBranch3()","comment":"\nIf the content provided matches the content in the specificed [branchName], then\n`null` is returned.\n\nIf no content is added to the directory, an [Error] is thrown.\n","name":"populateBranch","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"branchName","name":"branchName","kind":"param"},{"ref":{"refId":"bot_git/PopulateTempDir","name":"PopulateTempDir"},"id":"populator","name":"populator","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"commitMessage","name":"commitMessage","kind":"param"}],"line":"278","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/_TempDirs","name":"_TempDirs"}],"name":"Future"},"id":"_getTempDirPairForNewBranch1()","name":"_getTempDirPairForNewBranch","isPrivate":true,"children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"newBranchName","name":"newBranchName","kind":"param"}],"line":"347","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/_TempDirs","name":"_TempDirs"}],"name":"Future"},"id":"_getTempDirPair1()","name":"_getTempDirPair","isPrivate":true,"children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"existingBranchName","name":"existingBranchName","kind":"param"}],"line":"372","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"isStatic":true,"id":"isGitDir1()","name":"isGitDir","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"path","name":"path","kind":"param"}],"line":"398","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/GitDir","name":"GitDir"}],"name":"Future"},"isStatic":true,"id":"init2()","comment":"\n[allowContent] if true, doesn't check to see if the directory is empty\n\nWill fail if the source is a git directory (either at the root or a sub directory)\n","name":"init","children":[{"ref":{"refId":"dart.io/Directory","name":"Directory"},"id":"source","name":"source","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"allowContent","name":"allowContent","kind":"param"}],"line":"415","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/GitDir","name":"GitDir"}],"name":"Future"},"isStatic":true,"id":"fromExisting1()","name":"fromExisting","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"gitDirRoot","name":"gitDirRoot","kind":"param"}],"line":"432","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"bot_git/GitDir","name":"GitDir"}],"name":"Future"},"isStatic":true,"id":"_init1()","name":"_init","isPrivate":true,"children":[{"ref":{"refId":"dart.io/Directory","name":"Directory"},"id":"source","name":"source","kind":"param"}],"line":"445","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/bool","name":"bool"}],"name":"Future"},"isStatic":true,"id":"_isGitDir1()","name":"_isGitDir","isPrivate":true,"children":[{"ref":{"refId":"dart.io/Directory","name":"Directory"},"id":"dir","name":"dir","kind":"param"}],"line":"462","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"path","name":"path","line":"16","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"_processWorkingDir","name":"_processWorkingDir","isPrivate":true,"line":"396","kind":"property"},{"isStatic":true,"id":"_workTreeArg","name":"_workTreeArg","isPrivate":true,"line":"4","kind":"variable"},{"isStatic":true,"id":"_gitDirArg","name":"_gitDirArg","isPrivate":true,"line":"5","kind":"variable"},{"ref":{"refId":"dart.core/RegExp","name":"RegExp"},"isFinal":true,"isStatic":true,"id":"_shaRegExp","name":"_shaRegExp","isPrivate":true,"line":"6","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"_path","name":"_path","isPrivate":true,"line":"8","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"_gitWorkTree","name":"_gitWorkTree","isPrivate":true,"line":"9","kind":"variable"},{"id":"_raw2()","name":"_raw","isPrivate":true,"children":[{"initializedField":{"refId":"bot_git/GitDir/_path","name":"_path"},"ref":{"refId":"dart.core/String","name":"String"},"id":"_path","name":"_path","isPrivate":true,"kind":"param"},{"initializedField":{"refId":"bot_git/GitDir/_gitWorkTree","name":"_gitWorkTree"},"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"defaultValue":"null","id":"_gitWorkTree","name":"_gitWorkTree","isPrivate":true,"kind":"param"}],"line":"11","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"TreeEntry","uri":"package:bot_io/src/bot_git/git.dart","name":"TreeEntry","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"303","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"bot_git/TreeEntry","name":"TreeEntry"}],"name":"List"},"isStatic":true,"id":"fromLsTreeOutput1()","name":"fromLsTreeOutput","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"output","name":"output","kind":"param"}],"line":"305","kind":"method"},{"isFinal":true,"isStatic":true,"id":"_lsTreeLine","name":"_lsTreeLine","isPrivate":true,"line":"266","kind":"variable"},{"isFinal":true,"isStatic":true,"id":"_lsTreeRegEx","name":"_lsTreeRegEx","isPrivate":true,"line":"270","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","comment":"\nAll numbers.\n\nSee this this [post on stackoverflow](http://stackoverflow.com/questions/737673/how-to-read-the-mode-field-of-git-ls-trees-output)\n","name":"mode","line":"277","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"type","name":"type","line":"280","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"sha","name":"sha","line":"281","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"name","name":"name","line":"282","kind":"variable"},{"id":"4()","name":"","children":[{"initializedField":{"refId":"bot_git/TreeEntry/mode","name":"mode"},"ref":{"refId":"dart.core/String","name":"String"},"id":"mode","name":"mode","kind":"param"},{"initializedField":{"refId":"bot_git/TreeEntry/type","name":"type"},"ref":{"refId":"dart.core/String","name":"String"},"id":"type","name":"type","kind":"param"},{"initializedField":{"refId":"bot_git/TreeEntry/sha","name":"sha"},"ref":{"refId":"dart.core/String","name":"String"},"id":"sha","name":"sha","kind":"param"},{"initializedField":{"refId":"bot_git/TreeEntry/name","name":"name"},"ref":{"refId":"dart.core/String","name":"String"},"id":"name","name":"name","kind":"param"}],"line":"284","kind":"constructor"},{"returnType":{"refId":"bot_git/TreeEntry","name":"TreeEntry"},"id":"fromLsTree1()","name":"fromLsTree","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","name":"value","kind":"param"}],"line":"296","kind":"constructor"}],"line":"265","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Commit","uri":"package:bot_io/src/bot_git/git.dart","name":"Commit","children":[{"returnType":{"refId":"bot_git/Commit","name":"Commit"},"isStatic":true,"id":"parse1()","name":"parse","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"content","name":"content","kind":"param"}],"line":"181","kind":"method"},{"returnType":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"bot_git/Commit","name":"Commit"}],"name":"Map"},"isStatic":true,"id":"parseRawRevList1()","name":"parseRawRevList","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"content","name":"content","kind":"param"}],"line":"188","kind":"method"},{"returnType":{"refId":"bot/Tuple","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"bot_git/Commit","name":"Commit"}],"name":"Tuple"},"isStatic":true,"id":"_parse2()","name":"_parse","isPrivate":true,"children":[{"ref":{"refId":"bot/StringLineReader","name":"StringLineReader"},"id":"slr","name":"slr","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"isRevParse","name":"isRevParse","kind":"param"}],"line":"201","kind":"method"},{"isFinal":true,"isStatic":true,"id":"_headerRegExp","name":"_headerRegExp","isPrivate":true,"line":"159","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"treeSha","name":"treeSha","line":"161","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"author","name":"author","line":"162","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"committer","name":"committer","line":"163","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"message","name":"message","line":"164","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"content","name":"content","line":"165","kind":"variable"},{"ref":{"refId":"bot/ReadOnlyCollection","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"ReadOnlyCollection"},"isFinal":true,"id":"parents","name":"parents","line":"166","kind":"variable"},{"id":"_internal6()","name":"_internal","isPrivate":true,"children":[{"initializedField":{"refId":"bot_git/Commit/treeSha","name":"treeSha"},"ref":{"refId":"dart.core/String","name":"String"},"id":"treeSha","name":"treeSha","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/author","name":"author"},"ref":{"refId":"dart.core/String","name":"String"},"id":"author","name":"author","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/committer","name":"committer"},"ref":{"refId":"dart.core/String","name":"String"},"id":"committer","name":"committer","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"id":"message","name":"message","kind":"param"},{"initializedField":{"refId":"bot_git/Commit/content","name":"content"},"ref":{"refId":"dart.core/String","name":"String"},"id":"content","name":"content","line":"169","kind":"param"},{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Iterable"},"id":"parents","name":"parents","line":"169","kind":"param"}],"line":"168","kind":"constructor"}],"line":"158","kind":"class"},{"superclass":{"refId":"bot_git/CommitReference","name":"CommitReference"},"id":"BranchReference","uri":"package:bot_io/src/bot_git/git.dart","name":"BranchReference","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"154","kind":"method"},{"isStatic":true,"id":"_localBranchPrefix","name":"_localBranchPrefix","isPrivate":true,"line":"139","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"branchName","name":"branchName","line":"141","kind":"variable"},{"returnType":{"refId":"bot_git/BranchReference","name":"BranchReference"},"id":"2()","name":"","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"sha","name":"sha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"reference","name":"reference","kind":"param"}],"line":"143","kind":"constructor"},{"id":"_internal3()","name":"_internal","isPrivate":true,"children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"sha","name":"sha","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"reference","name":"reference","kind":"param"},{"initializedField":{"refId":"bot_git/BranchReference/branchName","name":"branchName"},"ref":{"refId":"dart.core/String","name":"String"},"id":"branchName","name":"branchName","kind":"param"}],"line":"151","kind":"constructor"}],"line":"138","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"CommitReference","comment":"\nRepresents the output from `git show-ref`\n","uri":"package:bot_io/src/bot_git/git.dart","name":"CommitReference","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"bot_git/CommitReference","name":"CommitReference"}],"name":"List"},"isStatic":true,"id":"fromShowRefOutput1()","name":"fromShowRefOutput","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"input","name":"input","kind":"param"}],"line":"114","kind":"method"},{"returnType":{"refId":"bot_git/BranchReference","name":"BranchReference"},"id":"toBranchReference0()","name":"toBranchReference","line":"131","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"134","kind":"method"},{"ref":{"refId":"dart.core/RegExp","name":"RegExp"},"isFinal":true,"isStatic":true,"id":"_lsRemoteRegExp","name":"_lsRemoteRegExp","isPrivate":true,"line":"101","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"sha","name":"sha","line":"103","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"reference","name":"reference","line":"104","kind":"variable"},{"id":"2()","name":"","children":[{"initializedField":{"refId":"bot_git/CommitReference/sha","name":"sha"},"ref":{"refId":"dart.core/String","name":"String"},"id":"sha","name":"sha","kind":"param"},{"initializedField":{"refId":"bot_git/CommitReference/reference","name":"reference"},"ref":{"refId":"dart.core/String","name":"String"},"id":"reference","name":"reference","kind":"param"}],"line":"106","kind":"constructor"}],"line":"100","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Tag","uri":"package:bot_io/src/bot_git/git.dart","name":"Tag","children":[{"returnType":{"refId":"bot_git/Tag","name":"Tag"},"isStatic":true,"id":"parseCatFile1()","name":"parseCatFile","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"content","name":"content","kind":"param"}],"line":"69","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"objectSha","name":"objectSha","line":"57","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"type","name":"type","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"tag","name":"tag","line":"59","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"tagger","name":"tagger","line":"60","kind":"variable"},{"id":"_internal4()","name":"_internal","isPrivate":true,"children":[{"initializedField":{"refId":"bot_git/Tag/objectSha","name":"objectSha"},"ref":{"refId":"dart.core/String","name":"String"},"id":"objectSha","name":"objectSha","kind":"param"},{"initializedField":{"refId":"bot_git/Tag/type","name":"type"},"ref":{"refId":"dart.core/String","name":"String"},"id":"type","name":"type","kind":"param"},{"initializedField":{"refId":"bot_git/Tag/tag","name":"tag"},"ref":{"refId":"dart.core/String","name":"String"},"id":"tag","name":"tag","kind":"param"},{"initializedField":{"refId":"bot_git/Tag/tagger","name":"tagger"},"ref":{"refId":"dart.core/String","name":"String"},"id":"tagger","name":"tagger","kind":"param"}],"line":"62","kind":"constructor"}],"line":"56","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Git","uri":"package:bot_io/src/bot_git/git.dart","name":"Git","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"id":"isValidSha1()","name":"isValidSha","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","name":"value","kind":"param"}],"line":"23","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.io/ProcessResult","name":"ProcessResult"}],"name":"Future"},"isStatic":true,"id":"runGit3()","name":"runGit","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"args","name":"args","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"true","id":"throwOnError","name":"throwOnError","line":"28","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"id":"processWorkingDir","name":"processWorkingDir","line":"28","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"id":"_throwIfProcessFailed3()","name":"_throwIfProcessFailed","isPrivate":true,"children":[{"ref":{"refId":"dart.io/ProcessResult","name":"ProcessResult"},"id":"pr","name":"pr","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"process","name":"process","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"id":"args","name":"args","kind":"param"}],"line":"39","kind":"method"},{"isStatic":true,"id":"_shaRegexPattern","name":"_shaRegexPattern","isPrivate":true,"line":"20","kind":"variable"},{"isFinal":true,"isStatic":true,"id":"_shaRegEx","name":"_shaRegEx","isPrivate":true,"line":"21","kind":"variable"}],"line":"19","kind":"class"}],"line":"1","kind":"library"}